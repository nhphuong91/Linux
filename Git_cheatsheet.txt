https://nvie.com/posts/a-successful-git-branching-model/
https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow

Get git repo
-----------------------------------------------------------------------
git clone https://github.com/nhphuong91/Linux.git
-----------------------------------------------------------------------

Initialize git
-----------------------------------------------------------------------
git init <dir>
-----------------------------------------------------------------------

Stage changes
-----------------------------------------------------------------------
git add <dir/file>
or 
git stage <dir/file> => preferred
-----------------------------------------------------------------------

Commit changes
-----------------------------------------------------------------------
git commit -a -m "<descriptive msg>"
or 
git commit -m "<descriptive msg>"
-----------------------------------------------------------------------

Redo commits
-----------------------------------------------------------------------
Undo all commits after <commit>, preserving changes locally:
git reset <commit>

Discards all history and changes back to the specified commit:
git reset --hard <commit>
-----------------------------------------------------------------------

Branches
-----------------------------------------------------------------------
view current branch + all local branches:
git branch

Create new branch:
git branch <name>

switch branch:
git checkout <branch name>

Merg branch:
git merge <branch> =>> ~ pull request

Delete branch:
git branch -d <name>

Rename branch:
git branch -m <oldname> <newname> -> to rename other branch
or 
git branch -m <newname> -> to rename current branch

Get remote branch & switch local branch to it:
git checkout --track origin/<remote_branch>
-----------------------------------------------------------------------

Synchronize changes
-----------------------------------------------------------------------
Downloads all history from the remote tracking branches:
git fetch

Uploads all local branch commits:
git push => ~assume: git push origin master

Upload to target branch/folder:
git push -u <remote git/branch> <local git/branch>
-> -u: upstream

Updates your current local working branch:
git pull
-----------------------------------------------------------------------

Git global setup
-----------------------------------------------------------------------
git config --global user.name "Phuong Nguyen Hoai"
git config --global user.email "nhphuong@tma.com.vn"
-----------------------------------------------------------------------

Create a new repository
-----------------------------------------------------------------------
git clone git@gitlab.tma.com.vn:tic/camera-box.git
cd camera-box
touch README.md
git add README.md
git commit -m "add README"
git push -u origin master
-----------------------------------------------------------------------

Push an existing folder
-----------------------------------------------------------------------
cd existing_folder
git init
git remote add origin git@gitlab.tma.com.vn:tic/camera-box.git
git add .
git commit -m "Initial commit"
git push -u origin master
-----------------------------------------------------------------------

Push an existing Git repository
-----------------------------------------------------------------------
cd existing_repo
git remote rename origin old-origin
git remote add origin git@gitlab.tma.com.vn:tic/camera-box.git
git push -u origin --all
git push -u origin --tags
-----------------------------------------------------------------------


-----------------------------------------------------------------------

-----------------------------------------------------------------------


-----------------------------------------------------------------------

-----------------------------------------------------------------------
