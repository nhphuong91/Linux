Config sftp & ssh
-----------------------------------------------------------------------
Config ssh:
sudo apt install openssh-server
sudo systemctl enable ssh.service
-----------------------------------------------------------------------
Config sftp -> only use when it not works after ssh setup is done:
sudo nano /etc/ssh/sshd_config
_ comment out line: "Subsystem      sftp    /usr/lib/openssh/sftp-server"
_ add: "Subsystem sftp internal-sftp"
_ add: 
	"Match Group sftp_users
	X11Forwarding no
	AllowTcpForwarding yes
	ChrootDirectory /"
_ save
sudo systemctl restart ssh.service
sudo groupadd sftp_users
sudo usermod -aG sftp_users <user>
-----------------------------------------------------------------------


Auto mount
-----------------------------------------------------------------------
sudo vi /etc/fstab

add: <file system>  <mount point>   <type>  <options>   <dump>  <pass>
ex1: UUID=921356de       none         swap      sw         0       0
ex2: UUID=921356de       /dev/sda1    ext4   defaults      0       1
-----------------------------------------------------------------------

Add SSH key to git
-----------------------------------------------------------------------
Step 1: Generating a new SSH key pair
ssh-keygen -t ed25519 -C "<email@example.com>"
or
ssh-keygen -t rsa -b 4096 -C "<email@example.com>"

Step 2: Choose path & add protected password if necessary
Note: To edit use "ssh-keygen -p -f <keyname>"

Step 3: Adding an SSH key to your Git account (github, GitLab...)
Copy content of <key file>.pub located in ~/.ssh/ (id_rsa.pub or id_ed25519.pub)
or "cat ~/.ssh/<id_ed25519>.pub | clip"
Paste to "add ssh key" field on git account setting

Step 4: Verify
ssh -T git@<git domain>

Troubleshoot:
If not work after step 4, re-cloning git repo using ssh link
-----------------------------------------------------------------------


