REF: https://docs.opencv.org/4.2.0/d2/de6/tutorial_py_setup_in_ubuntu.html

# Steps for installing opencv
# Note: Setup all pip2/3 & venv beforehand

OPTION 1: Install using pre-built binary
-----------------------------------------------------------
sudo apt-get install python-opencv
-----------------------------------------------------------

OPTION 2: BUILD FROM SOURCE (python3)
1. Install OS libs & dependencies
-----------------------------------------------------------
sudo apt-get update
sudo apt-get upgrade

sudo apt-get install cmake git gcc g++ build-essential unzip pkg-config

sudo apt-get install python3-dev

sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev libv4l-dev
sudo apt-get install libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev

to support gtk2:
sudo apt-get install libgtk2.0-dev

to support gtk3:
sudo apt-get install libgtk-3-dev

sudo apt-get install libxvidcore-dev libx264-dev
sudo apt-get install libatlas-base-dev gfortran
sudo apt-get install libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libdc1394-22-dev libopenexr-dev

For Ubuntu 16.04, add libjasper-dev to add a system level support for the JPEG2000 format:
sudo add-apt-repository "deb http://security.ubuntu.com/ubuntu xenial-security main"
sudo apt-get install libjasper-dev
-----------------------------------------------------------

2. Get opencv and opencv_contrib git
-----------------------------------------------------------
git clone https://github.com/opencv/opencv.git
git clone https://github.com/opencv/opencv_contrib.git
-----------------------------------------------------------

3. Activate venv & install numpy using pip
-----------------------------------------------------------
pip install numpy
-----------------------------------------------------------

4. Configure OpenCV with CMake
-----------------------------------------------------------
cd ~/opencv
[optional] git checkout <version> (ex: 4.2.0)
mkdir build && cd build
cmake -D CMAKE_BUILD_TYPE=RELEASE \
    -D CMAKE_INSTALL_PREFIX=/usr/local \
    -D WITH_CUDA=OFF \
    -D INSTALL_PYTHON_EXAMPLES=ON \
    -D OPENCV_EXTRA_MODULES_PATH=~/opencv_4/opencv_contrib/modules \
    -D OPENCV_ENABLE_NONFREE=ON \
    -D BUILD_EXAMPLES=OFF \
    -D BUILD_NEW_PYTHON_SUPPORT=ON \
    -D BUILD_opencv_python3=ON \
    -D HAVE_opencv_python3=ON \
    -D PYTHON_EXECUTABLE=~/.virtualenvs/cv/bin/python \
    -D PYTHON_DEFAULT_EXECUTABLE=/usr/bin/python3 \
    ..

Note: Edit "PYTHON_EXECUTABLE" & "OPENCV_EXTRA_MODULES_PATH" depend on venv setup
      PYTHON_DEFAULT_EXECUTABLE may be unnecessary
      PYTHON_EXECUTABLE=<path to venv>/bin/python
-----------------------------------------------------------

5. Build opencv
-----------------------------------------------------------
make -j6 # j=# of parallel threads
-----------------------------------------------------------

6. Installing and verifying OpenCV
-----------------------------------------------------------
sudo make install
sudo ldconfig
-----------------------------------------------------------

7. Create symlink to cv2.cpython-36m-x86_64-linux-gnu.so
-----------------------------------------------------------
cd ~/.virtualenvs/cv/lib/python3.6/site-packages
ln -s /usr/local/lib/python3.6/site-packages/cv2/python-3.6/cv2.cpython-36m-x86_64-linux-gnu.so cv2.so
-----------------------------------------------------------
